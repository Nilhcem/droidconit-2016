[{
  "id": 1,
  "startAt": "2016-04-07 09:00",
  "duration": 40,
  "roomId": 0,
  "speakersId": null,
  "title": "Registration",
  "description": null
}, {
  "id": 2,
  "startAt": "2016-04-07 09:40",
  "duration": 20,
  "roomId": 0,
  "speakersId": null,
  "title": "Welcome",
  "description": null
}, {
  "id": 3,
  "startAt": "2016-04-07 10:00",
  "duration": 40,
  "roomId": 1,
  "speakersId": [1],
  "title": "Android Development Today",
  "description": "The Developer Preview of the next release of Android is here early this year, with a host of new features and APIs such as multi-window mode, notification enhancements and many behavior changes targeting battery life and system health. It’s the best time to start testing your apps to make sure you’re ready for the final release later this year. We are also eager to hear feedback on the N Developer Preview so that we can make sure we deliver the best possible product for developers to build upon."
}, {
  "id": 4,
  "startAt": "2016-04-07 10:40",
  "duration": 30,
  "roomId": 0,
  "speakersId": null,
  "title": "Barcamp organization",
  "description": null
}, {
  "id": 5,
  "startAt": "2016-04-07 11:10",
  "duration": 40,
  "roomId": 1,
  "speakersId": [2],
  "title": "#PERFMATTERS for Android",
  "description": "The slogan ‘#PERFMATTERS’ by Colt McAnlis is one of the most important statements, which an Android developer should follow. A well performing application makes the difference between a nice looking application and one, which gets successful. You, as an Android developer, have the responsibility to delight your users, so they don’t feel how much work your application has to burden to fulfill the user’s needs. This session will show you some easy optimizations and how to avoid glitches in the application. A lot of developers would shout, that this is premature optimization. In contrary it is preventive. With a small amount of work while developing you can avoid a lot of pitfalls. You will hopefully have a better understanding of the underlying system afterwards. During the session some tools and frameworks will be presented for helping you to fulfill your mission."
}, {
  "id": 6,
  "startAt": "2016-04-07 11:10",
  "duration": 40,
  "roomId": 2,
  "speakersId": [3],
  "title": "Application Architecture for Scaled Agile",
  "description": "An agile software development was introduced to focus more on individuals, interactions, working software, customer collaboration and responding to change. An agile team usually consists of 4 to 6 members including product owner, testers, designers, developers and agile coach. It is straightforward for smaller companies to apply. As a company grows, you might wonder how to keep the agile. Spotify has mainly formed agile teams based on features. However, teams’ autonomous could be restricted by an application architecture. We’ve changed an application architecture to support a scaled agile. Several ideas are borrowed from a longest time used architecture, WWW(world wide web). In this talk, we describe our application architecture with lessons."
}, {
  "id": 7,
  "startAt": "2016-04-07 11:10",
  "duration": 40,
  "roomId": 3,
  "speakersId": [4, 5],
  "title": "Drive together not the same",
  "description": "Connected cars are among us.\nToday we can use our smartphone in a safer way while driving not touching them at all! Let’s see together what we can do as developers to integrate our apps in Automotive Systems in the marketplace.\nWhat platform like Android Auto, Sync AppLink and Mirrorlink are offering to us to make a safe driving experience for our customers."
}, {
  "id": 8,
  "startAt": "2016-04-07 11:10",
  "duration": 40,
  "roomId": 4,
  "speakersId": [6, 7],
  "title": "Bonjour Android, it’s ZeroConf",
  "description": "ZeroConf is a protocol that helps us advertising a service or discovering the available services in our networks. This is how Chromecast works, but why don’t we go deeper?\n\n- What is ZeroConf\n– Why is it needed\n– Discovery VS Advertising\n– What are the different implementations that we can find on Android\n– And on server side?\n– Small demo and code show"
}, {
  "id": 9,
  "startAt": "2016-04-07 11:50",
  "duration": 20,
  "roomId": 0,
  "speakersId": null,
  "title": "Coffee break",
  "description": null
}, {
  "id": 10,
  "startAt": "2016-04-07 12:10",
  "duration": 50,
  "roomId": 1,
  "speakersId": [8],
  "title": "Gradle – Faster and deeper",
  "description": "Over the past months, various performance improvements have been made in Gradle core that highly benefit Android developers. And more radical improvements are coming very soon. On the forefront are the deeper modeling of variants and a revolutionary new configuration model. This will further enhance the experience of developing Android applications with Android Studio way beyond better performance. In this presentation, we will take a closer look at those Gradle enhancements and how they manifest in the context of Android and Android Studio. We will also demonstrate some new tooling that is going to be very beneficial to understand and improve your Android builds."
}, {
  "id": 11,
  "startAt": "2016-04-07 12:10",
  "duration": 50,
  "roomId": 2,
  "speakersId": [9],
  "title": "Let it flow! – Unidirectional data flow architecture on Android",
  "description": "Reactive Functional Programming becomes more and more recognised as a great way to build reliable and maintainable software.\nFunctional programming paradigms such as Immutability and avoiding statefull objects are considered good practices and something to strive for.\nThat’s great! However it is not always straightforward to apply those principles, let alone to create a whole architecture around them.\nRefactoring from an existing code base we will see how we can craft a great architecture and simplify our presentation layer by pushing more concerns as part of our domain."
}, {
  "id": 12,
  "startAt": "2016-04-07 12:10",
  "duration": 50,
  "roomId": 3,
  "speakersId": [10],
  "title": "ClassyShark – handy Android executable viewer",
  "description": "While developing apps we tend to think about dexs, jars, apks and classes as build/run time abstractions that just work. Most of the time this is true, however, when trying to debug runtime issues in large apps, things can sometimes get tricky.\nAfter working with 3rd party dependencies and analysing crashes neither being able to view the sources nor having time time to learn the library, I wrote a tool to assist me. By looking inside the jars and dexes I can see how they work and which libraries they call.\nI am pleased to announce that I have open sourced ClassyShark a stylish Java/Android executables browser!"
}, {
  "id": 13,
  "startAt": "2016-04-07 12:10",
  "duration": 50,
  "roomId": 4,
  "speakersId": [11],
  "title": "Android Forensics with Free/Open Source Tools",
  "description": "How many sensitive data are present in our mobile devices?\nSensitive data is really safe?\nEncrypted messages, are really encrypted?\nHow the police investigates our device?\nMy talk wants to answer all the questions above.\nI will analyze all the methods of acquisition and analysis of a terminal Android with free/open source software.\nThe proposed scenario is absolutely real.\nAfter analyzing in detail all the methods of acquisition and after describing the various types of acquisition, I will analyze in detail the main messaging applications like Whatsapp and Telegram.\nFor example, I will see where to find and how to recover deleted messages.\nMany other examples will be illustrated. I will fulfill a live demo with my android device.\nI will present a complete analysis of the device."
}, {
  "id": 14,
  "startAt": "2016-04-07 13:00",
  "duration": 40,
  "roomId": 1,
  "speakersId": [12, 13],
  "title": "Play Everywhere: providing a consistent experience across very different devices",
  "description": "Have you ever thought about delivering your app to more than just phones?\nHave you ever received complaints about users not being able to use your app on TVs, SmartWatches, Chromecasts, Cars or other platforms??\nHave you ever tried to think about what is the easiest way to achieve “ubiquity” while still providing quality???\n\nSpotify ships its experience on Android phones and tablets, Android TVs, Android Wear, Android Auto (and other car integrations), Chromecasts, Speakers and embedded devices, and many more. So yes,…we face these kind of problems all the time!\nAlessandro and Dima are going to give an overview of the challenges that Spotify encounters in multi-platform support and the solutions adopted.\n\n!!SPECIAL OFFER!! Overview of Spotify SDKs is included !!FREE OF CHARGE!!"
}, {
  "id": 15,
  "startAt": "2016-04-07 13:00",
  "duration": 40,
  "roomId": 2,
  "speakersId": [14],
  "title": "Internal Library Dependency Management",
  "description": "As your app code gets larger and more complex, it makes sense to break your project out into smaller reusable components. But what’s the best way to do this? How can you clearly version your internal libraries? What kind of setup and maintenance can you expect? How much could it slow down development time?\nIn this talk we’ll dive into the various ways you can manage internal library dependencies. We’ll chat about the current state of Android dependency management, Gradle multi-project builds, Git submodules, and creating a private maven repository in Artifactory. The speaker will share real-world examples, and the pros and cons of each approach."
}, {
  "id": 16,
  "startAt": "2016-04-07 13:00",
  "duration": 40,
  "roomId": 3,
  "speakersId": [15],
  "title": "Distribute your libraries via Maven, even privately",
  "description": "In order to remain cost effective reusing code is one of the most essentials skills of a modern Android developer.\nUsing open source libraries is one thing, but what if there isn’t a library available that suits your need? How would you go about to develop and distribute this library yourself?\nThis talk aims at providing a complete solution for library distribution, either within your own organization or with the entire open source community.\nYou will learn how to setup your own private Maven repository, configure an account for Maven Central or JCenter and that even BitBucket/Github can be used as a Maven repository!\nFully functional Gradle scripts will be provided for each alternative, taking important aspects like security and nested dependencies into account.\nAfter this talk, there will be no more excuse to ramp up your game and start reusing your own code!"
}, {
  "id": 17,
  "startAt": "2016-04-07 13:00",
  "duration": 40,
  "roomId": 4,
  "speakersId": [16],
  "title": "Reverse engineering is not just for hackers!",
  "description": "We spend a lot of time putting apps together, but when was the last time you pulled one apart?\nHow wonderful is it that Android is open-source, so we can simply look at the code when we need to?\nWhat if it were just as easy to look at the source code and behaviour of any other app?\nIf we can streamline the process of looking inside a compiled application then we’re more likely to employ it to answer questions and teach us valuable lessons we can apply to our work. We may learn from others and also make our own apps more secure.\nWe can pinpoint bugs that come from closed-source libraries such as those for ad and tracking networks, and work around those bugs, get them fixed faster, or even patch them if need be!\nThis talk will present simple real-world examples for maximum practical benefit using some of the ever improving set of reverse engineering tools for Android.\nYou don’t need to have any experience reverse engineering anything before, but hopefully even if you do you’ll pick up a few useful tips.\nThis talk aims to make every developer more familiar with the reverse engineering tools available for Android, and how and why they should apply them.\nThere’s an incredible amount that can be learned from taking things apart!"
}, {
  "id": 18,
  "startAt": "2016-04-07 13:40",
  "duration": 60,
  "roomId": 0,
  "speakersId": null,
  "title": "Lunch",
  "description": null
}, {
  "id": 19,
  "startAt": "2016-04-07 14:40",
  "duration": 50,
  "roomId": 1,
  "speakersId": [17, 18],
  "title": "Flat as a pancake",
  "description": "Is your app very slow in loading new pages with lots of views in it? Is your scrolling perf not great… well… did you try flattening your view hierarchy? And what about not using View at all? Are you brave enough? Do you simply like pancakes? Come and discover what that actually means!"
}, {
  "id": 20,
  "startAt": "2016-04-07 14:40",
  "duration": 50,
  "roomId": 2,
  "speakersId": [19],
  "title": "Android Library A-Z",
  "description": "In almost every Android app project, you use a variety of libraries. This talk covers some of the most used libraries. While developing an Android app, you rely on loads of 3rd party libraries to make your life easier. Need persistence? No problem. Need to access a REST API? No problem. Need to handle images in your app? No problem. There’s a library for almost any common task that Android developers will face. In this talk, I will show examples of some of the most common Android libraries that are out there."
}, {
  "id": 21,
  "startAt": "2016-04-07 14:40",
  "duration": 50,
  "roomId": 3,
  "speakersId": [20],
  "title": "Engage and retain users in the Android world",
  "description": "Making your app engaging, so that users who have installed it actually use it, is crucial to your app’s success. In this speech, we explore a number of Android and Google features you can take advantage of that help make your app a more useful and embedded part of the user’s Android experience."
}, {
  "id": 22,
  "startAt": "2016-04-07 14:40",
  "duration": 50,
  "roomId": 4,
  "speakersId": [21],
  "title": "The bytecode mumbo-jumbo",
  "description": "We know one of the main characteristics of Java is portability, and that usually means it is not as efficient as it should be. That might be the reason Java has never been associated with high performance, but nowadays there are a lot of Java powered devices in the world and lots of people are building applications for them.\n\nCompilers that produce native machine code do a great optimisation job because they know where the code is going to be executed. But because of the portability feature, the Java Compiler could not assume anything about where our program is going to run and leaves all the optimisations to be done by the JVM while loading or, even, running our code (or converting it to native code in the case of ART)\n\nIn this session you will not only learn how to make your Android code faster but also what to avoid when looking for critical performance and a bigger understanding of how the Java compiler works, and how these small changes affect to Dalvik VM and the ART runtime."
}, {
  "id": 23,
  "startAt": "2016-04-07 15:30",
  "duration": 50,
  "roomId": 1,
  "speakersId": [22],
  "title": "Loving Lean Layouts",
  "description": "XML layouts are a fundamental part of Android development at all levels. Getting started is straightforward but creating efficient layouts while still achieving a high-level of control takes some practice and a few tricks.\n\nIn this session we will look at creating lean yet lovely layouts. We will discuss use cases and best practices for standard layouts, recognizing when a custom layout is for you, common mistakes and misconceptions, and some tricks and situational techniques.\n\nThis talk will center around code and IDE demonstrations. All of the code will be available via GitHub."
}, {
  "id": 24,
  "startAt": "2016-04-07 15:30",
  "duration": 50,
  "roomId": 2,
  "speakersId": [23],
  "title": "Nearables and the Eddystone quest",
  "description": "The IoT world was supposed to be disrupted by iBeacon, but we are still waiting.\nOn a other hand, a first step for a world of nearables, Google released the Eddystone beacon format and the proximity API.\nLet’s see where this is bringing us!"
}, {
  "id": 25,
  "startAt": "2016-04-07 15:30",
  "duration": 50,
  "roomId": 3,
  "speakersId": [24, 25],
  "title": "Hinting around: text demystified",
  "description": "What is text? The answer of those who know, and like 90s music, is most likely “baby don’t hurt me, don’t hurt me, no more”.\nIt is often said that text is the most difficult part of a graphics toolkit and that is for good reasons.\nIn this talk we’re going to give you the tools you need to understand text, and bend this mysterious creature to your will.\nFrom the typography theory behind the fonts system, to the intricacies of supporting Unicode bidirectional text runs, to the typesetting itself, that would be enough to drive someone crazy. And there’s still nothing being drawn on screen, with that alone!\nNext you’ll need to have a text rendering engine that takes care of loading the fonts, laying out the glyphs, taking care of hinting too, and then actually draw them somewhere (let alone doing all this in a performant way).\nStill here? Good, then prepare for a journey that will take you through the history, implementation and pain of dealing with text.\nBehold the amazing powers you’ll acquire, enabling you to tame all kinds of text you’ll see on Android."
}, {
  "id": 26,
  "startAt": "2016-04-07 15:30",
  "duration": 50,
  "roomId": 4,
  "speakersId": [26],
  "title": "Are you looking for a realtime infrastructure behind your mobile app? Well, Firebase may be what you’re looking for..and even more!",
  "description": "In 2011 two guys founded a startup about an online chat service with the target of letting any developers easily integrate it inside their web app.\nBut what happened as result?! Just one year later, the founders realized that these developers were using their chat APIs in a non-conventional manner:they were using them for data synchronization within realtime software environment!\nSo Firebase was born! Growing up as Cloud Database, today supported by Google, it presents itself as a powerful platform for mobile and web applications.\nWith this talk I’ll give you an overview and an introduction to the Firebase NoSQL database, how to integrate it into your Android app and how to put it into a realtime context!"
}, {
  "id": 27,
  "startAt": "2016-04-07 16:20",
  "duration": 40,
  "roomId": 1,
  "speakersId": [27],
  "title": "Let’s Sprinkle some #PerfMatters on your ViewGroups",
  "description": "Framework classes like RelativeLayout are extremely powerful but their first goal is to be versatile.This comes with significant performances costs that can prevent your app from being fast and smooth. This is especially important in constrained areas like list scrolling. The situation is not hopeless though, let’s see how we can remedy this by writing our own layouting and drawing logic where it matters."
}, {
  "id": 28,
  "startAt": "2016-04-07 16:20",
  "duration": 40,
  "roomId": 2,
  "speakersId": [28],
  "title": "From clockwork to smartwatch",
  "description": "The measurement of time has always had a big impact on our society. The way we tell the time greatly evolved especially in the last centuries, leading to the creation of always more accurate tools, up to the first wearable technological devices.\n\nIn this talk you will explore the evolution of horology. You will discover the common elements that remained unchanged across the centuries, and how you can still find them in modern wearable devices. You will also learn about how different it is to develop for a smartwatch, compared to a smartphone, especially considering the Android Wear platform."
}, {
  "id": 29,
  "startAt": "2016-04-07 16:20",
  "duration": 40,
  "roomId": 3,
  "speakersId": [29],
  "title": "Kill your eventbus-driven architecture with fire",
  "description": "Some long time ago event bus libraries took over the Android developers world. Majority of Android applications used one of the variety of libraries available – EventBus, Otto or others. People loved this pattern because it made communication between Android components a lot easier than before.\nTime has changed though. Otto was just officially deprecated in favor of RxJava. Many of us already know that reckless using of event buses can result in bad architecture that’s not easy to maintain. However, it’s still used in a big amount of projects.\nDuring this presentation Mateusz will show you how he shot his foot multiple times by using eventbus not wisely. He’ll tell you about the alternatives for different usecases (not only RxJava-based) and scenarios where buses still work well enough."
}, {
  "id": 30,
  "startAt": "2016-04-07 16:20",
  "duration": 40,
  "roomId": 4,
  "speakersId": [30],
  "title": "Don’t Lose Your Head With Agile: Choosing The Right Approaches For A Software Project",
  "description": "Agile is not a fashion trend. Agile is here to help software owners achieve product delivery the way their businesses dictate it.\nAgile has a different face for every project, since every project is unique itself.\nAgile is a diversity of methodologies, approaches, and tools, and every product owner must make the right combination and facilitate painless product development and successful delivery.\n\nThis report shows how it’s done:\n• Major and most popular approaches to project management\n• Compatibility matrix of projects and methodologies\n• Combinations of approaches that are applicable to the product and the owner’s expectations\n• How to solve problems and dismiss unnecessary procedures\n\nNo methodology is used in its “pure” form; every software owner must select optimal tools to form a powerful and perfectly suitable approach to the project.\nThis report is here to help them do that."
}, {
  "id": 31,
  "startAt": "2016-04-07 17:00",
  "duration": 20,
  "roomId": 0,
  "speakersId": null,
  "title": "Coffee break",
  "description": null
}, {
  "id": 32,
  "startAt": "2016-04-07 17:20",
  "duration": 50,
  "roomId": 1,
  "speakersId": [10],
  "title": "10 ways to improve your Andorid app performance",
  "description": "As Developer Advocate at Google, I am exposed to various Android apps. I bring together several rules of thumb: working, best practice solutions for making your Android app better, while avoiding the common pitfalls.\n\nActivity leaks\nScrolling\nConcurrency APIs 1\nSystem Abuse & Deprecation\nArchitecture\nAppendix Concurrency APIs 2"
}, {
  "id": 33,
  "startAt": "2016-04-07 18:10",
  "duration": 170,
  "roomId": 0,
  "speakersId": null,
  "title": "Barcamp",
  "description": null
}, {
  "id": 34,
  "startAt": "2016-04-07 21:00",
  "duration": 180,
  "roomId": 0,
  "speakersId": null,
  "title": "PARTY!",
  "description": null
}, {
  "id": 35,
  "startAt": "2016-04-08 09:30",
  "duration": 50,
  "roomId": 1,
  "speakersId": [31],
  "title": "Think Like a Designer",
  "description": "Design is a key aspect to creating a great app and standing out in the store. But you’re not a designer; what can you do?! Learn some of the techniques that designers use to help you to think like a designer or work better with one. Learn how design principles make your app better and some tips on implementing material on Android."
}, {
  "id": 36,
  "startAt": "2016-04-08 10:20",
  "duration": 50,
  "roomId": 1,
  "speakersId": [32],
  "title": "Secure Development with Android",
  "description": "Developing a functional application is the first step, doing it securely is the second and effective one. Do you prevent hackers of going into your source code? How can you prevent Man in the Middle attacks in your application? Do you know how easy is to make code injections in an already existing application?\nThis talk with explore some of the common attacks an Android application can suffer, and it will introduce measures to mitigate the risk. If you are worried about how to cover the weak point of your application, come to this talk!"
}, {
  "id": 37,
  "startAt": "2016-04-08 10:20",
  "duration": 50,
  "roomId": 2,
  "speakersId": [33],
  "title": "How to Talk to Your Users",
  "description": "We all know talking to your users is essential! It’s a great way to find out what people want, a cheap way to test ideas before building them, everyone should do more of it!\nExcept there’s one problem… people aren’t telling you the truth.\nMost often there’s no malicious intent or they might not even be aware they’re doing it, but they will lie constantly nonetheless.\nIt’s up to you to design your questions and surveys in such a way that you get the right information, rather than just what people think you want to hear.\nDo it right and you will be well on your way to build the next great thing. This talk is all about how to get those answers."
}, {
  "id": 38,
  "startAt": "2016-04-08 10:20",
  "duration": 50,
  "roomId": 3,
  "speakersId": [34],
  "title": "Introduction to Google Project Tango and Intel RealSense technologies and usages",
  "description": "RealSense and Tango are projects which objective is to bring complete motion and space understanding to apps, by using specific cameras integrated into devices.\nYou’ll discover what are the different SDKs and cameras, how to use these that are becoming available to consumers really soon, and see what amazing products and new usages other developers have already started to work on.\nI can present Google Tango, its devkits (include the new one from Intel), the SDK, and apps and usages that can be done using such technologies."
}, {
  "id": 30,
  "startAt": "2016-04-08 10:20",
  "duration": 50,
  "roomId": 4,
  "speakersId": [35],
  "title": "Build an efficient REST Client on Android",
  "description": "It is important to limit and optimise network traffic in mobile communications.\nA well designed rest client is the best you can do in order to save network bandwidth and increase your online app responsiveness.\nThis talk is focused on how to create an optimal rest client with persistent cache in Android using HTTP/2, Retrofit, OkHttp and Realm while relying on an AppEngine hosted backend."
}, {
  "id": 30,
  "startAt": "2016-04-08 11:10",
  "duration": 30,
  "roomId": 1,
  "speakersId": [36],
  "title": "Improving Appstore Rank: Best Practices (& Tactics to Avoid)",
  "description": "How far would you go to make your app successful? Everyone has a strategy, and as an app publisher, Amazon has seen the good, the bad, and the ugly. Hear the tactics that will get you banned or blacklisted, along with best practices for actually achieving the results you want: more downloads, good reviews, and high monetization."
}, {
  "id": 31,
  "startAt": "2016-04-08 11:10",
  "duration": 30,
  "roomId": 2,
  "speakersId": [37, 38],
  "title": "We are all on Team UX",
  "description": "Designers and developers can make a powerful team, but we’ve noticed that sometimes miscommunication or differing perspectives can keep the product from reaching its full potential.\n\nIn our talk we give you practical tools to facilitate productive communication between developers and designers & increase the overall user experience of your products. Gain insight into how designers think and work, and learn some methods to have more effective working relationships between designers and developers."
}, {
  "id": 32,
  "startAt": "2016-04-08 11:10",
  "duration": 30,
  "roomId": 3,
  "speakersId": [39],
  "title": "Facebook Infer: A static analyzer for catching bugs before you ship",
  "description": "Static analyzers are automated tools that spot bugs in source code by scanning programs without running them. They complement traditional dynamic testing: Where testing allows individual runs through a piece of software to be checked for correctness, static analysis allows multiple and sometimes even all flows to be checked at once. Infer is a static analyzer that is used internally to analyze the main Facebook apps for Android and iOS, Facebook Messenger, and Instagram, among others. Infer reports bugs which are responsible for app crashes and performance issues, such as accessing null pointers, and leaking resources such as Context instances.\n\nEach month, hundreds of potential bugs identified by Facebook Infer are fixed by our developers before they are committed to our codebases and deployed to people’s phones. Facebook Infer is open source (http://fbinfer.com/) so you can use it yourself.\n\nThis talk will show how to use Infer as part of the development workflow, and will present some of the results obtained on some real Android apps."
}, {
  "id": 33,
  "startAt": "2016-04-08 11:10",
  "duration": 30,
  "roomId": 4,
  "speakersId": [40],
  "title": "Android Reactive Programming with RxJava",
  "description": "In a world where there is a smartphone in every pocket, designing and building applications that can run smoothly and deliver the User Experience that users deserve, it’s the only way to go. Reactive Programming with RxJava will help you to beat Android Platform limitations to create astonishing Android Apps.\nThis talk will be a practical journey from basic Reactive Programming and Observer Pattern concepts to the main feature of RxJava, with code examples and a real-world app.\nYou will learn how to create an Observable “from scratch”, from a list or from a function you already have in your code base. You will learn how to filter an Observable sequence to create a new sequence containing only the values you want; you will learn how to apply a function to an Observable, how to concatenate or merge Observables. I’ll show how to enjoy RxAndroid Schedulers to overcome the threading and concurrency hell in Android.\nI will close the talk with a practical example about RxJava + Retrofit, to easily communicate with a REST API.\n\nPS\nI know you read this abstract with Don LaFontaine’s voice."
}, {
  "id": 34,
  "startAt": "2016-04-08 11:40",
  "duration": 30,
  "roomId": 0,
  "speakersId": null,
  "title": "Coffee break",
  "description": null
}, {
  "id": 35,
  "startAt": "2016-04-08 12:10",
  "duration": 40,
  "roomId": 1,
  "speakersId": null,
  "title": "Microsoft",
  "description": null
}, {
  "id": 36,
  "startAt": "2016-04-08 12:10",
  "duration": 40,
  "roomId": 2,
  "speakersId": [41],
  "title": "Essential tools and tips for an effective design workflow",
  "description": "The beginning of my career as a designer has been quite tough… While in the iOS fairytale world I had to design for few devices, Android was challenging me with his army made of thousand different screens…\nAnd often I didn’t have any clue if what I was doing was right. I was constantly asking myself: how does an Android designer work? Which tools does he/she use? Are there any tips/rules/best practices? I’d like to try to answer these questions with you at this Droidcon"
}, {
  "id": 37,
  "startAt": "2016-04-08 12:10",
  "duration": 40,
  "roomId": 3,
  "speakersId": [43],
  "title": "Fresco: a powerful system by Facebook for displaying images in Android applications",
  "description": "Fresco is a powerful system, developed by Facebook, for displaying images in Android applications. It takes care of image loading and display so you don’t have to. Fresco’s image pipeline will load images from the network, local storage, or local resources. To save data and CPU, it has three levels of cache; two in memory and another in internal storage. Fresco’s Drawees show a placeholder for you until the image has loaded and automatically show to the image when it arrives. When the image goes off-screen, it automatically releases its memory. In this talk we’ll see how Fresco works, how to use it into your application and how to contribute to improve it"
}, {
  "id": 38,
  "startAt": "2016-04-08 12:10",
  "duration": 40,
  "roomId": 4,
  "speakersId": [44],
  "title": "IoT – with and against – Android",
  "description": "RunTastic’s Christianus Kaar is a prime example for the success of building hardware: he transformed his easy-to-intimidate firm into a powerhouse owned by Germany’s most powerful media company.\nThis story looks at the various ways an Android device can be made to communicate with real hardware.\nLook forward to a demonstration of obscure and common techniques ranging from the use of the headphone output to Bluetooth LE, the ADK and a large variety of other ways to make real things go beep and boom."
}, {
  "id": 39,
  "startAt": "2016-04-08 12:50",
  "duration": 40,
  "roomId": 1,
  "speakersId": [45],
  "title": "You can do better with Kotlin",
  "description": "The Kotlin programming language is gaining popularity amongst the Android developer community. It’s a modern language that gives more power in everyday routines. Kotlin code generally looks cleaner and nicer, and it’s much easier to work with when you have less verbosity or code duplication. And this is especially noticeable comparing with the soon-to-be-archaic versions of Java used on Android.\n\nBut what’s even more important, is that Kotlin is 100% compatible with all existing Java frameworks, and has good tooling in Android Studio and IntelliJ IDEA. It’s a pragmatic language with a very low learning curve, and can be quickly grasped by Java developers.\n\nIn this talk we’ll discuss the concepts of the language that provide the desired expressiveness, as well as additional goodies designed specifically for Android."
}, {
  "id": 40,
  "startAt": "2016-04-08 12:50",
  "duration": 40,
  "roomId": 2,
  "speakersId": [46, 47],
  "title": "Crafting Great Hypotheses",
  "description": "Building business apps is no joke.\nAs designers, we are often asked to create apps that have the wow factor, they need to be distinctive, and we are rarely appreciated when we create something pragmatic, something that simply works.\nMoving forward in the face of uncertainty, it is essential to devise a plan, an UX roadmap that includes research, objectives and tests.\nIn a world where success is just when preparation meets opportunity, starting with ready to be validated solid hypotheses is the secret souce to a project without risks. Are you a risk taker?"
}, {
  "id": 41,
  "startAt": "2016-04-08 12:50",
  "duration": 40,
  "roomId": 3,
  "speakersId": [48, 49],
  "title": "Bluetooth LE beacons, Eddystone and Physical Web: an introduction",
  "description": "Bluetooth Low Energy (BLE) beacons is an emerging technology. First introduced in 2013, with iBeacon launch from Apple, BLE beacons technology immediately raised a large interest in the mobile community, recently freshened with the Google introduction of Eddystone format and Physical Web project.\nA BLE beacon is a wireless device that periodically broadcast a Bluetooth Low Energy advertising packet, that is received by a smartphone and used to determine the position with respect to the beacon itself. This allows to provide “context-aware” information to the mobile user, opening up the possibility to connect the online (virtual) world with the offline (real) physical world. It is clear that BLE beacons are considered one of the anabling technology for the Internet of Things (IoT).\nIn this talk, we will provide a review on this technology, starting from a general introduction on how a BLE beacon works and interacts with smartphones. Then, focus will be given on Eddystone beacon specifications from Google, analyzing different advertising formats and their potential applications. Finally, the talk will address Physical Web project, a novel approach, developed and introduced by Google and based on open-source Eddystone-URL BLE beacon format, to enable interaction on-demand between a mobile device and a smart device (a parking meter, an electronic kiosk, a bus stop, …)."
}, {
  "id": 43,
  "startAt": "2016-04-08 12:50",
  "duration": 40,
  "roomId": 4,
  "speakersId": [50],
  "title": "Simple Android client-server architecture, using Retrofit, Realm, Chronos and Gson.",
  "description": "Programs are Data plus Operations\nRetrofit: you know what it is. Creating basic RestAdapter with additional configuration for Realm and Gson.\nRealm: how to configure it, using different Realm instances for separated threads. Realm action(query, transaction) lifecycle.\nChronos: creating abstract Operation to provide Realm and Retrofit support and error handling.\nCombinig all together."
}, {
  "id": 44,
  "startAt": "2016-04-08 13:30",
  "duration": 60,
  "roomId": 0,
  "speakersId": null,
  "title": "Lunch",
  "description": null
}, {
  "id": 45,
  "startAt": "2016-04-08 14:30",
  "duration": 50,
  "roomId": 1,
  "speakersId": [51],
  "title": "#UXMatters",
  "description": "Do you know what it takes to have a good mobile User eXperience?\nAre you adding the features to make your Android application taste like more.\nIs your design good enough?\nWiebe Elsinga will share is experience on what good and bad UX is, hoping to show you how to become a better developer and/or designer."
}, {
  "id": 46,
  "startAt": "2016-04-08 14:30",
  "duration": 50,
  "roomId": 2,
  "speakersId": [52],
  "title": "fun things (you: CanDo<in Kotlin>) = …",
  "description": "There is no silver bullet for Android boilerplate, but some bullets are more fun than other.\nDuring the last year Kotlin has grown in popularity in Android community. If you haven’t heard of it or did hear something, but are not convinced yet, I will show you why it’s so fun to start coding in it. We’ll see how it improves readability and safety of your code, while not making your app any less performant than Java. When you get your hands dirty with Kotlin, you will notice it can replace quite a few popular Android libraries.\nThe whole session is planned as pure livecoding, so make sure to drink a shot of espresso before joining!"
}, {
  "id": 47,
  "startAt": "2016-04-08 14:30",
  "duration": 50,
  "roomId": 3,
  "speakersId": [53],
  "title": "Marketing for developers – build",
  "description": "Developers love to create stuff. Yes, we do. Most times it is the easier part of the product lifecycle. In this short presentation, I will take you to the other side. The side of “personas”, “landing pages”, “sales funnels” and all of this marketing mumbo jumbo.\nMy goal is to show you how to create the app that people want and how to make it visible."
}, {
  "id": 48,
  "startAt": "2016-04-08 14:30",
  "duration": 50,
  "roomId": 4,
  "speakersId": [54],
  "title": "Android Data Binding in action using MVVM pattern",
  "description": "The Data Binding framework was one of Google’s announcements at I/O 2015, it’s a big change in the code organization of an Android app. Some developers are sceptical about this framework but, if used in the “right way”, it’s very powerful and it allows to remove a lot of redundant boilerplate code from activities and fragments.\n\nIn this talk we’ll start from the Data Binding basic concepts and then we’ll see how to use it to improve the architecture of a typical Android application applying the Model View ViewModel pattern. Using this pattern you need to write less code to create an app that can be easily tested using JVM and instrumentation tests."
}, {
  "id": 49,
  "startAt": "2016-04-08 15:20",
  "duration": 50,
  "roomId": 1,
  "speakersId": [55],
  "title": "Confessions of a digital finger painter: best practices for mobile digital art apps",
  "description": "Since time immemorial technology and art have travelled hand in hand.\nThe advent of touch screen smartphones put a canvas in everyones pocket, redefining creative process, distribution and opportunities.\nAn algorithmic proliferation of apps, along with advancing mobile tech solutions has created limitless creative possibilities for users and developers alike.\nWe will take a look at what makes a good creative app, best practices, and the future of mobile digital art."
}, {
  "id": 50,
  "startAt": "2016-04-08 15:20",
  "duration": 50,
  "roomId": 2,
  "speakersId": [56],
  "title": "So you have a side project, huh?",
  "description": "Software engineers have the skills and means to create. We can build our dreams if we choose to!\nCreating a product requires a lot of work and is full of hurdles on the way. I want to share my experiences of building my passion product as an after-work project.\nI learned a lot and I’d like to share the lessons:\nImportance of programming skills\nUnderstanding “good enough” in your code\nImportance of MVP\nAndroid and Android UI\nHow to use Android native UI as an effective prototyping tool? Architecture matters.\nUser feedback – When to ignore users, when to listen to users? Never letting users design your product but designing it for your users (and yourself).\nAvoiding “designed by committee”\nFunding your dreams\nFinding the partners\nCreating a community\nReaching to a new business domain\n\nNote:\nThe talk is about a passion project I’ve been building for more than 3 years now. At the time of writing this we’re just heading to Kickstarter to make it finally reality. All this time we have self funded the project and worked on it after-work basis.\nI think devs should be encouraged to create more… We can do it :-)"
}, {
  "id": 51,
  "startAt": "2016-04-08 15:20",
  "duration": 50,
  "roomId": 3,
  "speakersId": [57],
  "title": "World-Class Testing Development Pipeline for Android",
  "description": "Test our Android applications is not an easy task. When we start writing tests most of the time we don’t know what to test and how, our code is not as testable as it should, we write tests but sometimes they are flaky or test nothing. In this talk we are going to talk about what to test an how to design a testing development pipeline. Using real production code we will show how to test our application using different approaches based on different testing strategies and frameworks or libraries like: Espresso, Robotium, MockWebServer, Dagger, JUnit, Mockito, etc.\n\nIf you want to learn how to design a testing development pipeline, how to test your application layers using different strategies and write tests you can trust, this is your talk."
}, {
  "id": 52,
  "startAt": "2016-04-08 15:20",
  "duration": 50,
  "roomId": 4,
  "speakersId": [58],
  "title": "Evolving the Android Core with Aspects",
  "description": "Porting android to a custom hardware platform requires significant changes to the AOSP code, especially if you’re targeting something different from the usual tablet or phone: an industrial control panel, a vending machine, a public-facing entertainment device, etc.\nIn this talk I’ll present a different way to customize and extend the android core, based on aspect-oriented technology. I’ll show how to integrate the AspectJ compiler in the android build system, and how to add a new feature without touching the AOSP code, using aspects to add methods and data members, intercept function calls, etc.\nI’ll also show how using aspects allows straightforward traceability from user-level features to all the relevant changes (often spread around different core modules), and how keeping your custom code apart from the main AOSP code simplifies porting your changes to a newer android version, or remove them selectively (addressing for instance product families).\nAlong the talk, we’ll also touch on several aspect-oriented notions, get to see some actual AspectJ code, understand how to make aspects more robust, etc.\nThe talk is mostly directed at people working inside the android platform, but it’s also interesting for those who want to see a new programming paradigm applied to non-trivial problems. Adding a new language to the android build process is a small challenge in itself, and using aspects inside the android platform (as opposed to regular apps) has never been attempted before"
}, {
  "id": 42,
  "startAt": "2016-04-08 16:10",
  "duration": 40,
  "roomId": 1,
  "speakersId": [42],
  "title": "The 2016 Android Developer Toolbox",
  "description": "Developing for Android has drastically changed over the last few years.\nWe now have a gigantic toolbox we can benefit from to improve our productivity and build better applications.\n\nDuring this presentation I will introduce some of the tools we use daily at happn, a multi-million users French dating application.\n\nI will talk about many tools that help us to:\n– Simulate a laggy/instable HTTP(s) connection\n– Interact with our application to analyze logs, views, and modify any data (inc. memory / shared preferences / database) in real time\n– Change our application’s backend server without recompiling\n– Better understand our technical debt\n– Create a REST mock server in a few seconds to anticipate the development of a feature when the backend is not developed yet\n– Measure the performance (cpu/memory) of our application\n– Decompile our application to better understand and analyze its security\n– Alter a server response and check whether the application behaves properly\n– and many more tips…"
}, {
  "id": 53,
  "startAt": "2016-04-08 16:10",
  "duration": 40,
  "roomId": 2,
  "speakersId": [59, 60],
  "title": "Who do you think owns your application?",
  "description": "Just like any other software system, Android has its own list of security problems.\nIt is a race between hackers and Android platform developers. Some of the most eligible security professionals are handling the security of Android platform, but what about the application you are going to release to millions of users via Play store? Can a user “trust” your app?\nIf you think about it, the user of your application can be a malicious hacker who can decompile your application, get hold of your secret keys, abuse application permissions, read secret data from phone and cause havoc for a normal user.\nAs a whole, any system supports a flexible degree of collaboration between applications, where dependencies can be simple or complex.\nThese dependencies can be exploited through quirks and tricks to get data, passwords, and eventually own your application.\nLet us think about it…\nCan an innocuous looking permission enable a hacker to read loads of private data from your phone and indirectly from your app?\nCan locally saved data be accessed and used by the hacker against you.\nIn this talk, we would demonstrate how neglecting Android security model enables hackers to abuse your application and give him/her an opportunity to tear apart your reputation.\nWe would also talk about how a developer can “secure” their applications using Android secure coding guidelines.\nBy the end of the session, we shall get a deeper understanding of permission model and securely implementing Android components which can prevent leak of sensitive data."
}, {
  "id": 54,
  "startAt": "2016-04-08 16:10",
  "duration": 40,
  "roomId": 3,
  "speakersId": [61],
  "title": "Mastering the NDK with Android Studio 2.0 and the gradle-experimental plugin",
  "description": "Android Studio is finally fully supporting the NDK so you can easily integrate C/C++ inside Android applications.\nWhile this support is still new and experimental, it’s worth already doing the final jump from other IDEs and build systems.\nAfter a short introduction on what is the NDK, learn how to use it from Android Studio while avoiding several classic pitfalls."
}, {
  "id": 55,
  "startAt": "2016-04-08 16:10",
  "duration": 40,
  "roomId": 4,
  "speakersId": [62],
  "title": "Building a maintainable app using MVP and Dagger 2",
  "description": "Very few concepts shook up the Android world as MVP and Dagger 2 did.\nMVP gave us a long-awaited clean architecture in Android apps, while Dagger 2 brought it to a whole new level by removing all the boilerplate code that we don’t like writing.\nIn this talk I will demonstrate the benefits of the MVP architecture and its reusability and scalability.\nI’ll go over Dagger’s role in MVP as well as unit testing, and show how to focus on creating reusable modules on a concrete example."
}, {
  "id": 56,
  "startAt": "2016-04-08 16:50",
  "duration": 20,
  "roomId": 0,
  "speakersId": null,
  "title": "Coffee break",
  "description": null
}, {
  "id": 57,
  "startAt": "2016-04-08 17:10",
  "duration": 50,
  "roomId": 1,
  "speakersId": [63],
  "title": "A friend in needs – a JS indeed",
  "description": "Your VP of Product decides that you need to add a new, awesome critical piece of business logic to the thousands of lines of code that already make up your codebase. You worked hard, add it, built a new version, and uploaded it to the Play Store. The only thing that’s left, is to wait while all your millions of users will update it.\nHoping that it won’t take too long.\nWhat if I told you that you could “”outsource”” your critical business code to your server, deploy immediately and still have the ability to run your application, even if you are offline, and do this with almost the same performance as if this was the native code.\nSound too good to be true?\nSo come and I show you how deep the rabbit-hole goes."
}, {
  "id": 58,
  "startAt": "2016-04-08 17:10",
  "duration": 50,
  "roomId": 2,
  "speakersId": [64, 65],
  "title": "Pimp my watch",
  "description": "From Lollipop 5.0.2W to Marshmallow 6.0W: all the new features in the latest versions of Android wear like always on app, the cellular support and maps.\nWe take focus on sensors and give some tips&tricks to improve performance.\nWe provide a lot of code to show these features.\nAnd watchfaces like there was no tomorrow."
}, {
  "id": 59,
  "startAt": "2016-04-08 17:10",
  "duration": 50,
  "roomId": 3,
  "speakersId": [66],
  "title": "Android: it’s time to Go To Work!",
  "description": "Is Android truly ready for business-critical industrial solutions?\nIn this talk I’ll present project experiences, advantages and issues moving industrial enterprise solutions used by Fortune 500 companies from Windows mobile devices to Android covering topics like:\n• Security\n• Staging and managing devices\n• Policy Controllers\n• Single-use devices\n• Managing updates and HW obsolescence\nIf you’re thinking that Android for Work is enough for a line-of-business industrial application, think again"
}, {
  "id": 60,
  "startAt": "2016-04-08 17:10",
  "duration": 50,
  "roomId": 4,
  "speakersId": [67],
  "title": "To ∞ (~65K) and beyond!",
  "description": "It’s 2016 even for us, Android developers. We can expect lots of new awesome libraries, services and tools to make our life easier.\nUnfortunately though, among many of the problems that we carry over from the past years, the loathed, dreadful,\nwhy-in-the-name-of-Andy-Rubin limit of 65536 methods is the most notable of them.\n\nThis talk focuses on analyzing this “condition” from a pragmatic and down-to-earth perspective for developers. You will get to\nunderstand what exactly this problem is about and why it exists in the first place. Moreover, we will go through the possible solutions,\neach one of them presented with pros and cons. At the end of this talk, you should be able to evaluate which solution best suits your app,\nand even if you need a solution in the first place.\n\nBonus round: useful tips and some sarcasm."
}, {
  "id": 61,
  "startAt": "2016-04-08 18:00",
  "duration": 50,
  "roomId": 1,
  "speakersId": [68],
  "title": "Smart SPHERES – Android Powered, Free Flying Robots on the International Space Station",
  "description": "The Intelligent Robotics Group (IRG) at NASA Ames Research Center was tasked with upgrading an existing free flying robot, SPHERES (Synchronized Position Hold Engage and Reorient Experiment) on the International Space Station (ISS). The SPHERES has been on ISS since 2006.\n\nThe lists of requirements that we needed to address were increasing processing, adding Wifi, touchscreen, and a camera. This narrowed our search down to smartphones, tablets, and iPod touch devices. The best option at the time was the Google Nexus S.\n\nThe process of making this smartphone ISS certified started in Dec 2010. This involved removing the GSM chip, making it run off of AA alkaline batteries, covering the touchscreen with Teflon tape, and changing the OS so that device drivers were not needed when plugged into the laptops on ISS. This was the first Smartphone certified for ISS and Shuttle. It was launched into space on STS-135 on 8th July 2011.\n\nThis started a series of experiments involving the smartphone and SPHERES. We called it Smart SPHERES. The experiments include sensor performance in 0g, verifying space to ground communications, live video survey and tele-operations, face detection and following, and Wifi localization.\n\nThe success of these experiments lead to follow up work using a Google Project Tango smartphone. In addition to the previous modification needed, we moved all the sensors to face the front, integrated the data cable to communicate to SPHERES, and used ADB over Wifi to upload/download data. This was launched into space on Orb-2 rocket on 14 July 2014.\n\nThe Tango smartphone allowed us to investigate localization without SPHERES by using a previously built map of ISS. This has lead to our current project of building a free flying robot for ISS called Astrobee."
}, {
  "id": 62,
  "startAt": "2016-04-08 18:00",
  "duration": 50,
  "roomId": 2,
  "speakersId": null,
  "title": "T-UNION",
  "description": null
}, {
  "id": 63,
  "startAt": "2016-04-08 18:00",
  "duration": 50,
  "roomId": 3,
  "speakersId": [69],
  "title": "Chronicles of TDD: How to automatize and enrich testing in your Android library",
  "description": "Test-driven development (TDD) is a software process, whose aim is developing features by first introducing new failing test cases, and then writing the correspondent piece of code to make them pass.\nAlthough theoretically fascinating, we all know how hard and how much hassle is required to adhere to this process. This becomes even trickier in Android, where current tools do not always empower devs to mock and stub properly the internals of the system.\nIn this talk, after recalling some of the basic principles of TDD and testing (e.g., mocking, stubbing), I am going to discuss how to introduce proper testing into a previously poorly tested project so to make it ideal for TDD. As a real-world example, I will consider code extracts from Grab’n Run (grabnrun.org), an open-source Android library that I developed to secure dynamic code loading, and that I heavily refactored during the past months.\nAlong the way, I will present some of the Java and Android-specific tools and frameworks (e.g., Mockito, Hamcrest, Robolectric, Shadows) for improving test efficacy, as well as share some of the lesson learned during the whole process.\nIdeal targets for this talk are beginners, and intermediates in the subject of testing in Java and/or Android, who should receive a quite complete overview on the topic. Experts are also invited to remove some dust from their knowledge, and, maybe, to share their experience such that your libraries and mine could be even more well-tested in the future!"
}, {
  "id": 64,
  "startAt": "2016-04-08 18:00",
  "duration": 50,
  "roomId": 4,
  "speakersId": [70, 71],
  "title": "Backend for Android Developers",
  "description": "We believe that every Android developer should be able to write a simple but powerful backend without having to maintain a massive boilerplate codebase.\nSo, what’s better than a Java framework and a NoSQL database for storing your data?\nMoreover, the client code can become really hard to maintain when dealing with common tasks such as RESTful requests or user authentication.\nIn spending time trying to reinvent the wheel, you will lose your focus on what’s really important: your users.\nIn this talk we will learn how to develop a full stack project, from the backend, through the protocol to the Android application."
}, {
  "id": 65,
  "startAt": "2016-04-08 18:50",
  "duration": 10,
  "roomId": 0,
  "speakersId": null,
  "title": "Closing",
  "description": null
}]
